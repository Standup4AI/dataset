"""
Script to select the validation videos for the laughter detection task.
The script takes as input the transcripts generated by Whisper and WhisperX, and the laughter detection model to detect new candidate laughters.
It creates csv files to validate or not the candidadte laughters, by manually annotating them.
"""
import os
os.environ["CUDA_DEVICE_ORDER"] = "PCI_BUS_ID"
os.environ["CUDA_VISIBLE_DEVICES"] = "1"

from whisperX import whisperX_main
from utils import whisperjson2csv, fix_timestamps, LaughtersNormalization
import pandas as pd
import os
import glob
from tqdm import tqdm

def process_file(fn_wx, fn_wf, path_mixed, path_laughters, fn_new_laughters, t_min, verbose=False):

    dfx = pd.read_csv(fn_wx, index_col=0)
    dfw = whisperjson2csv(path_json = fn_wf)

    # fixing timestamps errors due to laughters or "voice noise"
    dfx, new_laughters = fix_timestamps(dfx, dfw, verbose=verbose)
    dfx.to_csv(path_mixed, index=False)

    # adding the new possible laughters to the list of already ML-detected ones 
    laughters_base = pd.read_json(path_laughters).transpose().values
    dfl = LaughtersNormalization(laughters_base, new_laughters, t_min)
    dfl.to_csv(fn_new_laughters, index=False)

def process_file_loop(list_files_index, path_mixed, path_wx, path_wf, 
                      path_data_standup, lang, path_new_laughters, t_min):

    for fn in tqdm(list_files_index):
        if not os.path.isfile(f'{path_mixed}{fn}.csv'):
            try:
                process_file(fn_wx = f'{path_wx}{fn}.csv', fn_wf = f'{path_wf}{fn}.json', 
                            path_mixed = f'{path_mixed}{fn}.csv', 
                            path_laughters = f'{path_data_standup}laughter_detection/{lang}/{fn}.json',
                            fn_new_laughters= f'{path_new_laughters}{fn}.csv',
                            t_min=t_min)
            except: 
                print('Problem file', fn)
    return 0

if __name__ == '__main__':

    path_data_standup = '/home/user/data/standup/'
    t_min=.3
    lang = 'fr'
    path_wx = path_data_standup + f'transcript/{lang}/whisperx-large-v3-french/'
    path_wf = path_data_standup + f'transcript/{lang}/whisper-large-v3-french/'

    path_mixed = path_data_standup + f'transcript/{lang}/mixed/'
    os.makedirs(path_mixed, exist_ok=True)
    path_new_laughters = f'{path_data_standup}laughter_detection/{lang}/Updated/'
    os.makedirs(path_new_laughters, exist_ok=True)

    list_files_index = [os.path.split(k)[1].split('.')[0] for k in glob.glob(path_wx + "*.csv")][:5]

    process_file_loop(list_files_index, path_mixed, path_wx, path_wf, 
                    path_data_standup, lang, path_new_laughters, t_min)
